// <auto-generated />
using System;
using AutoRef_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoRef_API.Migrations
{
    [DbContext(typeof(AppDataBase))]
    [Migration("20250307204852_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoRef_API.Database.Disponibilidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Franja1")
                        .HasColumnType("int");

                    b.Property<int>("Franja2")
                        .HasColumnType("int");

                    b.Property<int>("Franja3")
                        .HasColumnType("int");

                    b.Property<int>("Franja4")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("AutoRef_API.Database.Partido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnotadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnotadorId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Arbitro1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Arbitro1Id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Arbitro2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Arbitro2Id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipoLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipoVisitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<Guid>("LugarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LugarId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnotadorId");

                    b.HasIndex("AnotadorId1");

                    b.HasIndex("Arbitro1Id");

                    b.HasIndex("Arbitro1Id1");

                    b.HasIndex("Arbitro2Id");

                    b.HasIndex("Arbitro2Id1");

                    b.HasIndex("LugarId");

                    b.HasIndex("LugarId1");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("AutoRef_API.Database.Polideportivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Polideportivos");
                });

            modelBuilder.Entity("AutoRef_API.Database.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClubVinculado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<int>("Licencia")
                        .HasColumnType("int");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AutoRef_API.Database.Disponibilidad", b =>
                {
                    b.HasOne("AutoRef_API.Database.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AutoRef_API.Database.Partido", b =>
                {
                    b.HasOne("AutoRef_API.Database.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AnotadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Usuario", "Anotador")
                        .WithMany()
                        .HasForeignKey("AnotadorId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Usuario", null)
                        .WithMany()
                        .HasForeignKey("Arbitro1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Usuario", "Arbitro1")
                        .WithMany()
                        .HasForeignKey("Arbitro1Id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Usuario", null)
                        .WithMany()
                        .HasForeignKey("Arbitro2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Usuario", "Arbitro2")
                        .WithMany()
                        .HasForeignKey("Arbitro2Id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Polideportivo", null)
                        .WithMany()
                        .HasForeignKey("LugarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRef_API.Database.Polideportivo", "Lugar")
                        .WithMany()
                        .HasForeignKey("LugarId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anotador");

                    b.Navigation("Arbitro1");

                    b.Navigation("Arbitro2");

                    b.Navigation("Lugar");
                });
#pragma warning restore 612, 618
        }
    }
}
